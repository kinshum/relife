package com.bzkj.runtime.redis.service;import com.alibaba.dubbo.config.annotation.Service;import com.bzkj.constants.DrawConstants;import com.bzkj.dto.UserInfo;import com.bzkj.enumeration.cache.CacheModelEnum;import com.bzkj.facade.redis.CacheUserService;import com.bzkj.facade.redis.RedisService;import org.springframework.beans.factory.annotation.Autowired;import java.util.concurrent.TimeUnit;/** * @description: 用户服务接口 * @author: jensen * @date: created by 2019/9/16 23:32 */@Service(interfaceClass = CacheUserService.class, version = "1.0.0")@org.springframework.stereotype.Servicepublic class CacheUserServiceImpl implements CacheUserService {    @Autowired    private RedisService redisService;    @Override    public UserInfo getUserInfo(String token) {        UserInfo userInfo = null;        String cacheKey = CacheModelEnum.USER_INFO.getCacheKey(token);        if (redisService.contain(cacheKey)) {            userInfo = (UserInfo) redisService.get(cacheKey);        }        return userInfo;    }    @Override    public UserInfo cacheKeep(String token) {        UserInfo userInfo = null;        String cacheKey = CacheModelEnum.USER_INFO.getCacheKey(token);        if (redisService.contain(cacheKey)) {            userInfo = (UserInfo) redisService.get(cacheKey);            //用户信息存储，默认缓存时长30分钟            redisService.put(cacheKey, userInfo, DrawConstants.USER_INFO_CACHE_TIME, TimeUnit.DAYS);        }        return userInfo;    }    @Override    public void cache(String token, UserInfo userInfo) {        redisService.put(CacheModelEnum.USER_INFO.getCacheKey(token), userInfo, DrawConstants.USER_INFO_CACHE_TIME, TimeUnit.DAYS);    }}