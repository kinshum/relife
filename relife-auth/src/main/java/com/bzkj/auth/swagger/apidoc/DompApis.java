package com.bzkj.auth.swagger.apidoc;import org.springframework.web.context.request.async.DeferredResult;import springfox.documentation.builders.ApiInfoBuilder;import springfox.documentation.builders.ParameterBuilder;import springfox.documentation.builders.PathSelectors;import springfox.documentation.builders.RequestHandlerSelectors;import springfox.documentation.schema.ModelRef;import springfox.documentation.service.ApiInfo;import springfox.documentation.service.Parameter;import springfox.documentation.spi.DocumentationType;import springfox.documentation.spring.web.plugins.Docket;import java.util.ArrayList;import java.util.List;/** * @description: * @author: jensen * @date: created by 2019/9/11 11:21 */public class DompApis {    public static Docket docs() {        ParameterBuilder ticketPar = new ParameterBuilder();        List<Parameter> pars = new ArrayList<Parameter>();        ticketPar.name("token").description("token值")                .modelRef(new ModelRef("string")).parameterType("header")                .required(false).build(); //header中的token参数非必填，传空也可以        pars.add(ticketPar.build());    //根据每个方法名也知道当前方法在设置什么参        return new Docket(DocumentationType.SWAGGER_2).groupName("relife")                .genericModelSubstitutes(DeferredResult.class)                .useDefaultResponseMessages(false)                .forCodeGeneration(true)                .pathMapping("/")                .select()                .apis(RequestHandlerSelectors.basePackage("com.bzkj.auth.controller"))                .paths(PathSelectors.regex("/api/.*"))                .build()                .globalOperationParameters(pars)                .apiInfo(apiInfo());    }    private static ApiInfo apiInfo() {        return new ApiInfoBuilder().title("在线接口文档")                .description("本文档只针对系统中的HTTP接口")                .termsOfServiceUrl("")                .version("20180718")                .build();    }}